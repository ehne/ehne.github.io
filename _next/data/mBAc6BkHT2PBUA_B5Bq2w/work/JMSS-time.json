{"pageProps":{"indexData":{"posts":[{"title":"Collective Fullstack website","description":"a website for Collective Fullstack, the name that me and one of my friends work under. It was built with Next.JS and is statically generated from markdown files.","href":"https://github.com/Collective-Fullstack/collective-fullstack.github.io"},{"title":"MathSender","description":"a tool designed to help teachers ask maths questions to students during online learning. MathSender provides a way to send beautiful LaTeX based expressions in real time via a question and answer system.","href":"https://collective-fullstack.github.io/work/MathSender"},{"title":"ERDot","description":"a python CLI script to create Entity Relationship Diagrams from JSON/YAML code.","href":"https://github.com/ehne/ERDot"},{"title":"PyNode Next","description":"PyNode Next allows you to easily create beautiful graph visualisations and animations via a simple Python library. PyNode Next was created as a modern replacement for PyNode, a program used in the teaching of the Victorian Certificate of Education's Algorithmics subject at John Monash Science School.","href":"https://github.com/ehne/PyNode-Next"},{"title":"yOS","description":"a web OS for small programming experiments that don't warrant a full website.","href":"https://yos.vercel.app"},{"title":"Microtext","description":"a library of small (and probably inefficient) utility functions for messing with text.","href":"https://github.com/ehne/microtext"},{"title":"StacksUI","description":"a UI layout library for the web that uses the paradigm of stacks. Inspired by SwiftUI.","href":"https://darcylf.me/StacksUI"},{"title":"JMSS Murder","description":"a fun real life battle royale style game, in which participants had to poke each other with plastic spoons. Created & run at John Monash Science School in 2019.","href":"https://collective-fullstack.github.io/work/JMSS-Murder"},{"title":"darcylf.me","description":"the website that you are currently on. It was built using nextjs, react & github pages.","href":"https://darcylf.me"}],"year":2022,"works":[{"slug":"Shareify","title":"Shareify","leadIn":"a web app that democratizes music in public places. Allowing people to vote on the songs to be played from a Spotify account.","date":2020.12},{"slug":"JMSS-time","title":"JMSS Time Updated","leadIn":"an update to the John Monash Science School timetable site, it now supports the new timetable introduced in 2020, as well as letting users set custom images to use as the background.","date":2020.01}]},"workData":{"slug":"JMSS-time","title":"JMSS Time Updated","leadIn":"an update to the John Monash Science School timetable site, it now supports the new timetable introduced in 2020, as well as letting users set custom images to use as the background.","content":"\nJMSS Time was a website created in 2017, to let [John Monash Science School (JMSS)](https://jmss.vic.edu.au) students know when their classes are. At the start of 2020 the timetable that JMSS ran on changed, and thus the original JMSS Time website no longer worked. [Collective Fullstack](https://collective-fullstack.github.io) was brought in to update the website for the new timetable, as well as to develop extra features to help students in the transition to online and flexible learning over the 2020 COVID-19 lockdown.\n\nStudents found the school's constant switching between onsite and online learning to be confusing, and so to help students we developed a new page on the website to display the online/onsite learning timetable. This site was made with JQuery like the rest of the JMSS Time website.\n\nWe also developed a custom image system, allowing students to set custom backgrounds to the main clock screen. This was a heavily requested feature by students and was met with positive reception when it was rolled out.\n\nThe original JMSS Time website was very large in terms of file size and so took a while to load on the school WiFi. As our final work on the JMSS Time project, we optimised the codebase. This meant rewriting the algorithms used under the hood to calculate the next class, as well as compressing the default background images. These optimisations resulted in a loading time reduction of up to 68.5% on a standard internet connection.","image":"https://collective-fullstack.github.io/s-images/work/Jmss-Time/JMSS-TimeTimetable.png","links":["https://collective-fullstack.github.io/work/JMSS-Time","https://jmss-time.github.io/","https://github.com/JMSS-Time"]}},"__N_SSG":true}